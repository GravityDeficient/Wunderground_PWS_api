/*
 * The Weather Company PWS API
 * APIs for Personal Weather Station Contributors. This is an unofficial Swagger 2.0 document for working with The Weather Company (Weather Underground) API data. At this time (24-06-2020) this document only covers 4 availible endpoints in observations domain portfolio.
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.13
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TheWeatherCompanyPwsApi);
  }
}(this, function(expect, TheWeatherCompanyPwsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TheWeatherCompanyPwsApi.PWSHistoryApi();
  });

  describe('(package)', function() {
    describe('PWSHistoryApi', function() {
      describe('v2PwsHistoryAll', function() {
        it('should call v2PwsHistoryAll successfully', function(done) {
          // TODO: uncomment, update parameter values for v2PwsHistoryAll call and complete the assertions
          /*
          var stationId = "stationId_example";
          var _date = 56;
          var units = "units_example";
          var format = "json";
          var opts = {};
          opts.numericPrecision = "numericPrecision_example";

          instance.v2PwsHistoryAll(stationId, _date, units, format, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(TheWeatherCompanyPwsApi.InlineResponse2001);
            expect(data.observations).to.be.a(TheWeatherCompanyPwsApi.Summaries);
    
            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('v2PwsHistoryDaily', function() {
        it('should call v2PwsHistoryDaily successfully', function(done) {
          // TODO: uncomment, update parameter values for v2PwsHistoryDaily call and complete the assertions
          /*
          var stationId = "stationId_example";
          var _date = 56;
          var units = "units_example";
          var format = "json";
          var opts = {};
          opts.numericPrecision = "numericPrecision_example";

          instance.v2PwsHistoryDaily(stationId, _date, units, format, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(TheWeatherCompanyPwsApi.InlineResponse2001);
            expect(data.observations).to.be.a(TheWeatherCompanyPwsApi.Summaries);
    
            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('v2PwsHistoryHourly', function() {
        it('should call v2PwsHistoryHourly successfully', function(done) {
          // TODO: uncomment, update parameter values for v2PwsHistoryHourly call and complete the assertions
          /*
          var stationId = "stationId_example";
          var _date = 56;
          var units = "units_example";
          var format = "json";
          var opts = {};
          opts.numericPrecision = "numericPrecision_example";

          instance.v2PwsHistoryHourly(stationId, _date, units, format, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(TheWeatherCompanyPwsApi.InlineResponse2001);
            expect(data.observations).to.be.a(TheWeatherCompanyPwsApi.Summaries);
    
            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
