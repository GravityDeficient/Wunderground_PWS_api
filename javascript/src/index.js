/*
 * The Weather Company PWS API
 * APIs for Personal Weather Station Contributors. This is an unofficial Swagger 2.0 document for working with The Weather Company (Weather Underground) API data. At this time (24-06-2020) this document only covers 4 availible endpoints in observations domain portfolio.
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.13
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/InlineResponse200', 'model/InlineResponse2001', 'model/InlineResponse2002', 'model/Measures', 'model/Observations', 'model/Summaries', 'model/SummariesInner', 'model/SummaryMeasures', 'api/PWSDailySummaryApi', 'api/PWSHistoryApi', 'api/PWSObservationsApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/InlineResponse200'), require('./model/InlineResponse2001'), require('./model/InlineResponse2002'), require('./model/Measures'), require('./model/Observations'), require('./model/Summaries'), require('./model/SummariesInner'), require('./model/SummaryMeasures'), require('./api/PWSDailySummaryApi'), require('./api/PWSHistoryApi'), require('./api/PWSObservationsApi'));
  }
}(function(ApiClient, InlineResponse200, InlineResponse2001, InlineResponse2002, Measures, Observations, Summaries, SummariesInner, SummaryMeasures, PWSDailySummaryApi, PWSHistoryApi, PWSObservationsApi) {
  'use strict';

  /**
   * APIs_for_Personal_Weather_Station_Contributors__This_is_an_unofficial_Swagger_2_0_document_for_working_with_The_Weather_Company__Weather_Underground_API_data__At_this_time__24_06_2020_this_document_only_covers_4_availible_endpoints_in_observations_domain_portfolio_.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var TheWeatherCompanyPwsApi = require('index'); // See note below*.
   * var xxxSvc = new TheWeatherCompanyPwsApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new TheWeatherCompanyPwsApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new TheWeatherCompanyPwsApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new TheWeatherCompanyPwsApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The InlineResponse200 model constructor.
     * @property {module:model/InlineResponse200}
     */
    InlineResponse200: InlineResponse200,
    /**
     * The InlineResponse2001 model constructor.
     * @property {module:model/InlineResponse2001}
     */
    InlineResponse2001: InlineResponse2001,
    /**
     * The InlineResponse2002 model constructor.
     * @property {module:model/InlineResponse2002}
     */
    InlineResponse2002: InlineResponse2002,
    /**
     * The Measures model constructor.
     * @property {module:model/Measures}
     */
    Measures: Measures,
    /**
     * The Observations model constructor.
     * @property {module:model/Observations}
     */
    Observations: Observations,
    /**
     * The Summaries model constructor.
     * @property {module:model/Summaries}
     */
    Summaries: Summaries,
    /**
     * The SummariesInner model constructor.
     * @property {module:model/SummariesInner}
     */
    SummariesInner: SummariesInner,
    /**
     * The SummaryMeasures model constructor.
     * @property {module:model/SummaryMeasures}
     */
    SummaryMeasures: SummaryMeasures,
    /**
     * The PWSDailySummaryApi service constructor.
     * @property {module:api/PWSDailySummaryApi}
     */
    PWSDailySummaryApi: PWSDailySummaryApi,
    /**
     * The PWSHistoryApi service constructor.
     * @property {module:api/PWSHistoryApi}
     */
    PWSHistoryApi: PWSHistoryApi,
    /**
     * The PWSObservationsApi service constructor.
     * @property {module:api/PWSObservationsApi}
     */
    PWSObservationsApi: PWSObservationsApi
  };

  return exports;
}));
