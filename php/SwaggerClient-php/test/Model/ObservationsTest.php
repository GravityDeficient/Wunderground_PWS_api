<?php
/**
 * ObservationsTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * The Weather Company PWS API
 *
 * APIs for Personal Weather Station Contributors. This is an unofficial Swagger 2.0 document for working with The Weather Company (Weather Underground) API data. At this time (23-06-2020) this document only covers 2 availible endpoints in observations domain portfolio.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.13
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

/**
 * ObservationsTest Class Doc Comment
 *
 * @category    Class
 * @description Observations
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ObservationsTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "Observations"
     */
    public function testObservations()
    {
    }

    /**
     * Test attribute "country"
     */
    public function testPropertyCountry()
    {
    }

    /**
     * Test attribute "epoch"
     */
    public function testPropertyEpoch()
    {
    }

    /**
     * Test attribute "humidity"
     */
    public function testPropertyHumidity()
    {
    }

    /**
     * Test attribute "lat"
     */
    public function testPropertyLat()
    {
    }

    /**
     * Test attribute "lon"
     */
    public function testPropertyLon()
    {
    }

    /**
     * Test attribute "neighborhood"
     */
    public function testPropertyNeighborhood()
    {
    }

    /**
     * Test attribute "obs_time_local"
     */
    public function testPropertyObsTimeLocal()
    {
    }

    /**
     * Test attribute "obs_time_utc"
     */
    public function testPropertyObsTimeUtc()
    {
    }

    /**
     * Test attribute "qc_status"
     */
    public function testPropertyQcStatus()
    {
    }

    /**
     * Test attribute "realtime_frequency"
     */
    public function testPropertyRealtimeFrequency()
    {
    }

    /**
     * Test attribute "software_type"
     */
    public function testPropertySoftwareType()
    {
    }

    /**
     * Test attribute "solar_radiation"
     */
    public function testPropertySolarRadiation()
    {
    }

    /**
     * Test attribute "station_id"
     */
    public function testPropertyStationId()
    {
    }

    /**
     * Test attribute "uv"
     */
    public function testPropertyUv()
    {
    }

    /**
     * Test attribute "winddir"
     */
    public function testPropertyWinddir()
    {
    }

    /**
     * Test attribute "imperial"
     */
    public function testPropertyImperial()
    {
    }

    /**
     * Test attribute "metric"
     */
    public function testPropertyMetric()
    {
    }

    /**
     * Test attribute "metric_si"
     */
    public function testPropertyMetricSi()
    {
    }

    /**
     * Test attribute "uk_hybrid"
     */
    public function testPropertyUkHybrid()
    {
    }
}
